# ===================================
# Netzw√§chter Environment Configuration
# ===================================

# ===================================
# DATABASE CONFIGURATION
# ===================================

# PostgreSQL connection string
# IMPORTANT: Always use sslmode=require in production for encrypted database connections
# Format: postgresql://username:password@host:port/database?sslmode=require
DATABASE_URL=postgresql://username:password@host:port/database?sslmode=require

# Optional: Local development database fallback
# LOCAL_DATABASE_URL=postgresql://localhost:5432/netzwaechter_dev

# ===================================
# SESSION SECURITY
# ===================================

# Session secret for signing cookies
# CRITICAL: Generate a strong random secret with the command below
# Command: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
# Requirements:
#   - Minimum 128 characters (64 bytes)
#   - Cryptographically secure random generation
#   - Different secret for each environment (dev/staging/prod)
#   - Rotate every 90 days
SESSION_SECRET=REPLACE-WITH-GENERATED-SECRET-FROM-COMMAND-ABOVE

# ===================================
# SERVER CONFIGURATION
# ===================================

# Application port
PORT=5000

# Environment mode: development | production | test
NODE_ENV=development

# ===================================
# EMAIL SERVICE CONFIGURATION
# ===================================

# SMTP server configuration for password resets and notifications
# Email service loads additional config from database (settings table)
# The password is the only credential stored in environment variables

# SMTP Password (stored securely in environment, not in database)
MAILSERVER_PASSWORD=your-secure-email-password

# Optional: Custom CA certificate for SMTP TLS verification
# MAILSERVER_CA_CERT=/path/to/ca-certificate.crt

# Note: SMTP server details (host, port, username) are stored in the database
# in the settings table under 'Mailserver_Portal' configuration

# ===================================
# SECURITY BEST PRACTICES
# ===================================

# 1. NEVER commit .env to git
#    - .env is in .gitignore
#    - Use this .env.example as a template only

# 2. Use strong secrets
#    - SESSION_SECRET: 128+ characters (cryptographically random)
#    - Passwords: Use strong, unique passwords

# 3. Different secrets per environment
#    - Development, staging, production must have separate secrets
#    - Never reuse secrets across environments

# 4. Rotate secrets regularly
#    - SESSION_SECRET: Every 90 days
#    - Database passwords: Every 180 days
#    - Email passwords: As per security policy

# 5. Secure file permissions
#    - chmod 600 .env (owner read/write only)
#    - Restrict access to necessary personnel only

# 6. Production requirements
#    - DATABASE_URL must use sslmode=require
#    - NODE_ENV must be 'production'
#    - All secrets must be strong and unique

# ===================================
# SETUP INSTRUCTIONS
# ===================================

# 1. Copy this file:
#    cp .env.example .env

# 2. Generate SESSION_SECRET:
#    node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"

# 3. Update all placeholder values with real credentials

# 4. Set file permissions:
#    chmod 600 .env

# 5. Verify configuration:
#    npm run check:env (if available)

# ===================================
# For more information, see:
# - server/SESSION_SECURITY.md (Session security documentation)
# - server/ENVIRONMENT_VARIABLES.md (Detailed variable documentation)
# ===================================
